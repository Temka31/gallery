{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  const {\n    0: url,\n    1: setUrl\n  } = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\");\n  const {\n    0: resItem,\n    1: setResItem\n  } = useState({});\n  const {\n    0: item,\n    1: setItem\n  } = useState();\n  const {\n    0: items,\n    1: setItems\n  } = useState({\n    \"del\": 1\n  });\n\n  const handleClickLoading = () => {\n    fetch(url).then(response => response.json()).then(data => {\n      if (\"data\" in data) {\n        setItem({\n          \"type\": \"mouse\",\n          \"url\": data.data.embed_url\n        });\n      }\n    });\n  }; //   useMemo(() => {\n  //     if (\"data\" in resItem){\n  //     setItem({\"type\":\"mouse\",\"url\":resItem.data.embed_url})\n  //   } },[resItem])\n\n\n  useMemo(() => {\n    if (items.url === undefined) {\n      setItems([item]);\n    } else {\n      setItems([...items, item]);\n    }\n  }, [item]);\n\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  const renderCards = () => {\n    if (items.length > 0) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"12345678\");\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), renderCards(), console.log(items), console.log(\"url\" in items));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItem","setResItem","item","setItem","items","setItems","handleClickLoading","fetch","then","response","json","data","embed_url","undefined","handleClickClear","alert","handelClickGroup","renderCards","length","console","log"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBL,QAAQ,CAC5B,sEAD4B,CAA9B;AAGA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC;AAAC,WAAM;AAAP,GAAD,CAAlC;;AAEA,QAAMY,kBAAkB,GAAG,MAAM;AAC/BC,IAAAA,KAAK,CAACT,GAAD,CAAL,CACCU,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV,UAAI,UAAUA,IAAd,EAAmB;AACnBR,QAAAA,OAAO,CAAC;AAAC,kBAAO,OAAR;AAAgB,iBAAMQ,IAAI,CAACA,IAAL,CAAUC;AAAhC,SAAD,CAAP;AACD;AAAE,KALL;AAOD,GARD,CAR8B,CAkBhC;AACA;AACA;AAEA;;;AAEEjB,EAAAA,OAAO,CAAC,MAAM;AACV,QAAIS,KAAK,CAACN,GAAN,KAAYe,SAAhB,EAA0B;AAC5BR,MAAAA,QAAQ,CAAC,CAACH,IAAD,CAAD,CAAR;AAAiB,KADf,MAEG;AAACG,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWF,IAAX,CAAD,CAAR;AAA4B;AAClC,GAJK,EAIH,CAACA,IAAD,CAJG,CAAP;;AAMA,QAAMY,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAKA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAGb,KAAK,CAACc,MAAN,GAAa,CAAhB,EAAkB;AACd,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADE;AAEH;AACF,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEZ,kBADlB;AAEE,IAAA,YAAY,EAAEQ,gBAFhB;AAGE,IAAA,YAAY,EAAEE,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGC,WAAW,EANd,EAOGE,OAAO,CAACC,GAAR,CAAYhB,KAAZ,CAPH,EAQGe,OAAO,CAACC,GAAR,CAAY,SAAShB,KAArB,CARH,CADF;AAaD","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [resItem, setResItem] = useState({});\n  const [item, setItem] = useState();\n  const [items, setItems] = useState({\"del\":1});\n\n  const handleClickLoading = () => {\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        if (\"data\" in data){\n        setItem({\"type\":\"mouse\",\"url\":data.data.embed_url})\n      } })\n    \n  };\n\n//   useMemo(() => {\n//     if (\"data\" in resItem){\n//     setItem({\"type\":\"mouse\",\"url\":resItem.data.embed_url})\n    \n//   } },[resItem])\n\n  useMemo(() => {\n      if (items.url===undefined){\n    setItems([item])}\n    else {setItems([...items, item]) }\n   }, [item])\n\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n\n  const renderCards = () => {\n    if(items.length>0){\n        return (\n      <div>12345678</div>)\n    }\n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n      {renderCards()}\n      {console.log(items)}\n      {console.log(\"url\" in items)}\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}