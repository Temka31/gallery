{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  const {\n    0: url,\n    1: setUrl\n  } = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\");\n  const {\n    0: resItems,\n    1: setResItems\n  } = useState();\n  const {\n    0: items,\n    1: setItems\n  } = useState();\n\n  const handleClickLoading = () => {\n    alert(\"Loading\");\n  };\n\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => setResItems(data.data.embed_url));\n    alert(\"zagrcuzil\");\n  }, [url]);\n  useMemo(() => {\n    let itemm = items;\n    setItems(itemm.push(...resItems));\n  }, [resItems]);\n\n  const renderCards = () => {\n    if (resItems > 0) return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"121312\");\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), renderCards(), console.log(items));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItems","setResItems","items","setItems","handleClickLoading","alert","handleClickClear","handelClickGroup","fetch","then","response","json","data","embed_url","itemm","push","renderCards","console","log"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBL,QAAQ,CAC5B,sEAD4B,CAA9B;AAGA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,EAAxC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAkBT,QAAQ,EAAhC;;AAEA,QAAMU,kBAAkB,GAAG,MAAM;AAC/BC,IAAAA,KAAK,CAAC,SAAD,CAAL;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAGA,QAAME,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACV,GAAD,CAAL,CACGW,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIX,WAAW,CAACW,IAAI,CAACA,IAAL,CAAUC,SAAX,CAF3B;AAIAR,IAAAA,KAAK,CAAC,WAAD,CAAL;AACD,GANQ,EAMN,CAACP,GAAD,CANM,CAAT;AASAH,EAAAA,OAAO,CAAC,MAAM;AACV,QAAImB,KAAK,GAAGZ,KAAZ;AACFC,IAAAA,QAAQ,CAACW,KAAK,CAACC,IAAN,CAAW,GAAGf,QAAd,CAAD,CAAR;AACD,GAHM,EAGJ,CAACA,QAAD,CAHI,CAAP;;AAMA,QAAMgB,WAAW,GAAG,MAAM;AACxB,QAAGhB,QAAQ,GAAC,CAAZ,EACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,GAJD;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEI,kBADlB;AAEE,IAAA,YAAY,EAAEE,gBAFhB;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGS,WAAW,EANd,EAOGC,OAAO,CAACC,GAAR,CAAYhB,KAAZ,CAPH,CADF;AAWD","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [resItems, setResItems] = useState();\n  const [items, setItems]=useState();\n\n  const handleClickLoading = () => {\n    alert(\"Loading\");\n  };\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => setResItems(data.data.embed_url));\n\n    alert(\"zagrcuzil\");\n  }, [url]);\n\n  \n  useMemo(() => {\n      let itemm = items;\n    setItems(itemm.push(...resItems));\n  }, [resItems]);\n\n\n  const renderCards = () => {\n    if(resItems>0)\n      return <div>121312</div>;\n    \n  };\n\n\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n      {renderCards()}\n      {console.log(items)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}