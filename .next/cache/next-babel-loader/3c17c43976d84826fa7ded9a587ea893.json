{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  var _useState = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState({}),\n      resItem = _useState2[0],\n      setResItem = _useState2[1];\n\n  var _useState3 = useState(),\n      loadTag = _useState3[0],\n      setLoadTeg = _useState3[1];\n\n  var _useState4 = useState([]),\n      items = _useState4[0],\n      setItems = _useState4[1];\n\n  var _useState5 = useState([]),\n      tags = _useState5[0],\n      setTags = _useState5[1];\n\n  var handleClickLoading = function handleClickLoading(tag) {\n    fetch(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (\"data\" in data) {\n        setItems([].concat(_toConsumableArray(items), [{\n          tag: tag,\n          url: data.data.embed_url\n        }]));\n        addTag(tag);\n      }\n    });\n  };\n\n  var addTag = function addTag(tag) {\n    if (!tags.includes(tag)) {\n      setTags([].concat(_toConsumableArray(tags), [tag]));\n    }\n  };\n\n  var handleClickClear = function handleClickClear() {\n    setItems([]);\n  };\n\n  var handelClickGroup = function handelClickGroup() {\n    alert(\"Group\");\n  };\n\n  var renderCards2 = function renderCards2() {\n    if (items.length > 0) {\n      return items.map(function (item) {\n        return __jsx(Card, {\n          item: item,\n          key: item.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      });\n    }\n  };\n\n  var renderCards = function renderCards() {\n    if (items.length > 0) {\n      tags.map(function (tag) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, tag, items.map(function (item) {\n          if (tag === item.tag) {\n            __jsx(Card, {\n              item: item,\n              key: item.url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            });\n          }\n        }));\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), renderCards(), console.log(items), console.log(tags));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItem","setResItem","loadTag","setLoadTeg","items","setItems","tags","setTags","handleClickLoading","tag","fetch","then","response","json","data","embed_url","addTag","includes","handleClickClear","handelClickGroup","alert","renderCards2","length","map","item","renderCards","console","log"],"mappings":"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","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [resItem, setResItem] = useState({});\n  const [loadTag, setLoadTeg] = useState();\n  const [items, setItems] = useState([]);\n  const [tags, setTags] = useState([]);\n\n  const handleClickLoading = tag => {\n    fetch(\n      \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag\n    )\n      .then(response => response.json())\n      .then(data => {\n        if (\"data\" in data) {\n          setItems([...items, { tag: tag, url: data.data.embed_url }]);\n          addTag(tag);\n        }\n      });\n  };\n\n  const addTag = tag => {\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n  };\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  const renderCards2 = () => {\n    if (items.length > 0) {\n      return items.map(item => <Card item={item} key={item.url} />);\n    }\n  };\n\n  const renderCards = () => {\n    if (items.length > 0) {\n      tags.map(tag => {\n        return (\n          <div>\n            {tag}\n            {items.map(item => {\n              if (tag === item.tag) {\n                <Card item={item} key={item.url} />;\n              }\n            })}\n          </div>\n        );\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n      {renderCards()}\n      {console.log(items)}\n      {console.log(tags)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}