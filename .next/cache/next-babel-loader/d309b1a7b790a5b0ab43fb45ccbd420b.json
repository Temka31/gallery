{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  const {\n    0: url,\n    1: setUrl\n  } = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\");\n  const {\n    0: resItem,\n    1: setResItem\n  } = useState({});\n  const {\n    0: loadTag,\n    1: setLoadTeg\n  } = useState();\n  const {\n    0: items,\n    1: setItems\n  } = useState([]);\n\n  const handleClickLoading = tag => {\n    fetch('https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=' + tag).then(response => response.json()).then(data => {\n      if (\"data\" in data) {\n        setItems([...items, {\n          \"tag\": tag,\n          \"url\": data.data.embed_url\n        }]);\n      }\n    });\n  }; //   useMemo(() => {\n  //     if (\"data\" in resItem){\n  //     setItem({\"type\":\"mouse\",\"url\":resItem.data.embed_url})\n  //   } },[resItem])\n  //   useMemo(() => {\n  //       if (\"del\" in items){\n  //     setItems(item)}\n  //     else {setItems([...items, item]) }\n  //    }, [item])\n\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  const tags = useMemo(() => {\n    if (items.length > 0) {\n      return Object.values(items);\n    } else {\n      return [];\n    }\n  }, [items]);\n\n  const renderCards = () => {\n    if (items.length > 0) {\n      return items.map(item => __jsx(Card, {\n        item: item,\n        key: item.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), renderCards(), console.log(items), console.log(tags));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItem","setResItem","loadTag","setLoadTeg","items","setItems","handleClickLoading","tag","fetch","then","response","json","data","embed_url","handleClickClear","handelClickGroup","alert","tags","length","Object","values","renderCards","map","item","console","log"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBL,QAAQ,CAC5B,sEAD4B,CAA9B;AAGA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,EAAtC;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMY,kBAAkB,GAAIC,GAAD,IAAS;AAClCC,IAAAA,KAAK,CAAC,oEAAkED,GAAnE,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV,UAAI,UAAUA,IAAd,EAAmB;AACnBP,QAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAC,iBAAMG,GAAP;AAAW,iBAAMK,IAAI,CAACA,IAAL,CAAUC;AAA3B,SAAX,CAAD,CAAR;AACD;AAAE,KALL;AAOD,GARD,CAR8B,CAkBhC;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AAEE,QAAMC,gBAAgB,GAAG,MAAM;AAC7BT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAGA,QAAMU,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAGF,QAAMC,IAAI,GAAGtB,OAAO,CAAC,MAAM;AACvB,QAAIS,KAAK,CAACc,MAAN,GAAe,CAAnB,EAAsB;AACpB,aAAOC,MAAM,CAACC,MAAP,CAAchB,KAAd,CAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF,GANiB,EAMf,CAACA,KAAD,CANe,CAApB;;AAQE,QAAMiB,WAAW,GAAG,MAAM;AACxB,QAAGjB,KAAK,CAACc,MAAN,GAAa,CAAhB,EAAkB;AACd,aACId,KAAK,CAACkB,GAAN,CAAUC,IAAI,IACV,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,GAAG,EAAEA,IAAI,CAACzB,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAIH;AACF,GAPD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEQ,kBADlB;AAEE,IAAA,YAAY,EAAEQ,gBAFhB;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGM,WAAW,EANd,EAOGG,OAAO,CAACC,GAAR,CAAYrB,KAAZ,CAPH,EAQGoB,OAAO,CAACC,GAAR,CAAYR,IAAZ,CARH,CADF;AAYD","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [resItem, setResItem] = useState({});\n  const [loadTag, setLoadTeg] = useState();\n  const [items, setItems] = useState([]);\n\n  const handleClickLoading = (tag) => {\n    fetch('https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag='+tag)\n    .then(response => response.json())\n    .then(data => {\n        if (\"data\" in data){\n        setItems([...items, {\"tag\":tag,\"url\":data.data.embed_url}])\n      } })\n    \n  };\n\n//   useMemo(() => {\n//     if (\"data\" in resItem){\n//     setItem({\"type\":\"mouse\",\"url\":resItem.data.embed_url})\n    \n//   } },[resItem])\n\n//   useMemo(() => {\n//       if (\"del\" in items){\n//     setItems(item)}\n//     else {setItems([...items, item]) }\n//    }, [item])\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\nconst tags = useMemo(() => {\n    if (items.length > 0) {\n      return Object.values(items);\n    } else {\n      return [];\n    }\n  }, [items]);\n\n  const renderCards = () => {\n    if(items.length>0){\n        return (\n            items.map(item => (\n                <Card item={item} key={item.url}/>\n              )))\n    }\n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n      {renderCards()}\n      {console.log(items)}\n      {console.log(tags)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}