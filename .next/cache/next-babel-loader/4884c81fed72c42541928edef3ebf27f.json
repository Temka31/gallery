{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  const {\n    0: url,\n    1: setUrl\n  } = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\");\n  const {\n    0: resItem,\n    1: setResItem\n  } = useState({});\n  const {\n    0: loadTag,\n    1: setLoadTeg\n  } = useState();\n  const {\n    0: items,\n    1: setItems\n  } = useState([]);\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n\n  const handleClickLoading = tag => {\n    fetch(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag).then(response => response.json()).then(data => {\n      if (\"data\" in data) {\n        setItems([...items, {\n          tag: tag,\n          url: data.data.embed_url\n        }]);\n        addTag(tag);\n      }\n    });\n  };\n\n  const addTag = tag => {\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n  };\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  const renderCards2 = () => {\n    if (items.length > 0) {\n      return items.map(item => __jsx(Card, {\n        item: item,\n        key: item.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  };\n\n  const renderCards = () => {\n    if (items.length > 0) {\n      tags.map(tag => {\n        __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, tag, items.map(item => {\n          {\n            console.log(tag);\n          }\n          {\n            console.log(item.tag);\n          }\n\n          if (tag === item.tag) {\n            __jsx(Card, {\n              item: item,\n              key: item.url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            });\n          }\n        }));\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), renderCards(), console.log(items), console.log(tags));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItem","setResItem","loadTag","setLoadTeg","items","setItems","tags","setTags","handleClickLoading","tag","fetch","then","response","json","data","embed_url","addTag","includes","handleClickClear","handelClickGroup","alert","renderCards2","length","map","item","renderCards","console","log"],"mappings":"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","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [resItem, setResItem] = useState({});\n  const [loadTag, setLoadTeg] = useState();\n  const [items, setItems] = useState([]);\n  const [tags, setTags] = useState([]);\n\n  const handleClickLoading = tag => {\n    fetch(\n      \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag\n    )\n      .then(response => response.json())\n      .then(data => {\n        if (\"data\" in data) {\n          setItems([...items, { tag: tag, url: data.data.embed_url }]);\n          addTag(tag);\n        }\n      });\n  };\n\n  const addTag = tag => {\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n  };\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  const renderCards2 = () => {\n    if (items.length > 0) {\n      return items.map(item => <Card item={item} key={item.url} />);\n    }\n  };\n\n  const renderCards = () => {\n    \n    if (items.length > 0) {\n      tags.map(tag => {\n        \n          <div>\n            {tag}\n            {items.map(item => {\n              {console.log(tag);}\n              {console.log(item.tag);}\n              if (tag === item.tag) {\n                <Card item={item} key={item.url} />;\n              }\n            })}\n          </div>\n        \n      });\n    }\n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n      {renderCards()}\n      {console.log(items)}\n      {console.log(tags)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}