{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/components/row.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nexport default function Row(_ref) {\n  var onClickLoading = _ref.onClickLoading,\n      onClickClear = _ref.onClickClear,\n      onClickGroup = _ref.onClickGroup,\n      group = _ref.group,\n      tag = _ref.tag,\n      setTag = _ref.setTag,\n      loading = _ref.loading,\n      setLoading = _ref.setLoading;\n\n  var handleChangeTag = function handleChangeTag(event) {\n    setTag(event.target.value);\n  };\n\n  var handleClick = function handleClick() {\n    if (tag == \"\") {\n      alert(\"заполните поле 'тег'\");\n    } else {\n      onClickLoading(tag);\n      setLoading(\"disabled\");\n      setTag(\"\");\n    }\n  };\n\n  var handleClickClear = function handleClickClear() {\n    onClickClear();\n    setTag(\"\");\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    label: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u0433\",\n    variant: \"outlined\",\n    type: \"text\",\n    name: \"tag\",\n    value: tag,\n    onChange: handleChangeTag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: loading,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, loading == \"\" ? \"Загрузить\" : \"Загрузка...\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleClickClear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    variant: \"contained\",\n    onClick: onClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, group ? \"Разгруппировать\" : \"Группировать\"));\n}","map":{"version":3,"sources":["/Users/tema/gallery/components/row.js"],"names":["Button","TextField","Row","onClickLoading","onClickClear","onClickGroup","group","tag","setTag","loading","setLoading","handleChangeTag","event","target","value","handleClick","alert","handleClickClear"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,eAAe,SAASC,GAAT,OASZ;AAAA,MARDC,cAQC,QARDA,cAQC;AAAA,MAPDC,YAOC,QAPDA,YAOC;AAAA,MANDC,YAMC,QANDA,YAMC;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,MAJDC,GAIC,QAJDA,GAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,UACC,QADDA,UACC;;AACD,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/BJ,IAAAA,MAAM,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIR,GAAG,IAAI,EAAX,EAAe;AACbS,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,KAFD,MAEO;AACLb,MAAAA,cAAc,CAACI,GAAD,CAAd;AACAG,MAAAA,UAAU,CAAC,UAAD,CAAV;AACAF,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GARD;;AAUA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7Bb,IAAAA,YAAY;AACZI,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACA,IAAA,EAAE,EAAC,gBADH;AAEA,IAAA,KAAK,EAAC,+DAFN;AAGA,IAAA,OAAO,EAAC,UAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,IAAI,EAAC,KALP;AAME,IAAA,KAAK,EAAED,GANT;AAOE,IAAA,QAAQ,EAAEI,eAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,QAAQ,EAAEF,OAAtD;AAA+D,IAAA,OAAO,EAAEM,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,IAAI,EAAX,GAAgB,WAAhB,GAA8B,aADjC,CAVF,EAaE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAEQ,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAbF,EAcE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEZ,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,GAAG,iBAAH,GAAuB,cAD/B,CAdF,CADF;AAoBD","sourcesContent":["\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function Row({\n  onClickLoading,\n  onClickClear,\n  onClickGroup,\n  group,\n  tag,\n  setTag,\n  loading,\n  setLoading\n}) {\n  const handleChangeTag = event => {\n    setTag(event.target.value);\n  };\n\n  const handleClick = () => {\n    if (tag == \"\") {\n      alert(\"заполните поле 'тег'\");\n    } else {\n      onClickLoading(tag);\n      setLoading(\"disabled\");\n      setTag(\"\");\n    }\n  };\n\n  const handleClickClear = () => {\n    onClickClear();\n    setTag(\"\");\n  };\n\n  return (\n    <div>\n      <TextField\n      id=\"outlined-basic\" \n      label=\"Введите тег\" \n      variant=\"outlined\"\n        type=\"text\"\n        name=\"tag\"\n        value={tag}\n        onChange={handleChangeTag}\n      />\n      <Button variant=\"contained\" color=\"primary\" disabled={loading} onClick={handleClick}>\n        {loading == \"\" ? \"Загрузить\" : \"Загрузка...\"}\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickClear}>Очистить</Button>\n      <Button variant=\"contained\" onClick={onClickGroup}>\n        {group ? \"Разгруппировать\" : \"Группировать\"}\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}