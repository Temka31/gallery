{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  var _useState = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState({}),\n      resItem = _useState2[0],\n      setResItem = _useState2[1];\n\n  var _useState3 = useState([]),\n      item = _useState3[0],\n      setItem = _useState3[1];\n\n  var items = [];\n\n  var handleClickLoading = function handleClickLoading() {\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (\"data\" in resItem) {\n        setItem({\n          \"type\": \"cat\",\n          \"url\": data.data.embed_url\n        });\n      }\n    });\n  }; //   useMemo(() => {\n  //     if (\"data\" in resItem){\n  //     setItem({\"type\":\"cat\",\"url\":resItem.data.embed_url})\n  //   } },[resItem])\n\n\n  useMemo(function () {\n    items.push.apply(items, _toConsumableArray(item));\n  }, [item]);\n\n  var handleClickClear = function handleClickClear() {\n    alert(\"Clear\");\n  };\n\n  var handelClickGroup = function handelClickGroup() {\n    alert(\"Group\");\n  };\n\n  var renderCards = function renderCards() {\n    if (items > 0) {\n      return __jsx(Card, {\n        item: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), renderCards(), console.log(items));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItem","setResItem","item","setItem","items","handleClickLoading","fetch","then","response","json","data","embed_url","push","handleClickClear","alert","handelClickGroup","renderCards","console","log"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,kBACRH,QAAQ,CAC5B,sEAD4B,CADA;AAAA,MACvBI,GADuB;AAAA,MAClBC,MADkB;;AAAA,mBAIAL,QAAQ,CAAC,EAAD,CAJR;AAAA,MAIvBM,OAJuB;AAAA,MAIdC,UAJc;;AAAA,mBAKNP,QAAQ,CAAC,EAAD,CALF;AAAA,MAKvBQ,IALuB;AAAA,MAKjBC,OALiB;;AAM9B,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BC,IAAAA,KAAK,CAACR,GAAD,CAAL,CACCS,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACV,UAAI,UAAUV,OAAd,EAAsB;AACtBG,QAAAA,OAAO,CAAC;AAAC,kBAAO,KAAR;AAAc,iBAAMO,IAAI,CAACA,IAAL,CAAUC;AAA9B,SAAD,CAAP;AACD;AAAE,KALL;AAOD,GARD,CAR8B,CAkBhC;AACA;AACA;AACA;;;AAEEhB,EAAAA,OAAO,CAAC,YAAM;AACZS,IAAAA,KAAK,CAACQ,IAAN,OAAAR,KAAK,qBAASF,IAAT,EAAL;AACA,GAFK,EAEJ,CAACA,IAAD,CAFI,CAAP;;AAIA,MAAMW,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BC,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAGA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAKA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAGZ,KAAK,GAAC,CAAT,EAAW;AACP,aACF,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE;AAEH;AACF,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEC,kBADlB;AAEE,IAAA,YAAY,EAAEQ,gBAFhB;AAGE,IAAA,YAAY,EAAEE,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGC,WAAW,EANd,EAOGC,OAAO,CAACC,GAAR,CAAYd,KAAZ,CAPH,CADF;AAWD","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [resItem, setResItem] = useState({});\n  const [item, setItem] = useState([]);\n  let items = [];\n\n  const handleClickLoading = () => {\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        if (\"data\" in resItem){\n        setItem({\"type\":\"cat\",\"url\":data.data.embed_url})\n      } });\n    \n  };\n\n//   useMemo(() => {\n//     if (\"data\" in resItem){\n//     setItem({\"type\":\"cat\",\"url\":resItem.data.embed_url})\n//   } },[resItem])\n\n  useMemo(() => {\n    items.push(...item)\n   },[item])\n\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n\n  const renderCards = () => {\n    if(items>0){\n        return (\n      <Card item={items}/>)\n    }\n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n      {renderCards()}\n      {console.log(items)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}