{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState } from \"react\";\nconst styles = {\n  img: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    height: \"100%\",\n    border: \"1px solid black\"\n  }\n};\nexport default function Index() {\n  const {\n    0: url,\n    1: setUrl\n  } = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\");\n  const {\n    0: items,\n    1: setItems\n  } = useState([]);\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n  const {\n    0: group,\n    1: setGroup\n  } = useState(false);\n  const {\n    0: tag,\n    1: setTag\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(\"\");\n\n  const handleClickLoading = tag => {\n    fetch(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag).then(response => response.json()).then(data => {\n      if (\"data\" in data) {\n        if (\"embed_url\" in data.data) {\n          setItems([...items, {\n            tag: tag,\n            url: data.data.embed_url\n          }]);\n          addTag(tag);\n        } else {\n          alert(\"По тегу ничего не найдено\");\n        }\n      } else {\n        alert(\"Произошла http ошибка\");\n      }\n\n      setLoading(\"\");\n    });\n  };\n\n  const addTag = tag => {\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n  };\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n\n  const handelClickGroup = () => {\n    setGroup(!group);\n  };\n\n  const renderCards = () => {\n    if (items.length > 0) {\n      return __jsx(\"div\", {\n        style: styles.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, items.map(item => __jsx(Card, {\n        item: item,\n        key: item.url,\n        setTage: setTag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    }\n  };\n\n  const renderCardsGroup = () => {\n    if (items.length > 0) return tags.map(tag => __jsx(\"div\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, tag, __jsx(\"div\", {\n      style: styles.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, items.map(item => {\n      if (tag === item.tag) {\n        return __jsx(Card, {\n          item: item,\n          key: item.url,\n          setTage: setTag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }\n    }))));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    group: group,\n    tag: tag,\n    setTag: setTag,\n    loading: loading,\n    setLoading: setLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), group ? renderCardsGroup() : renderCards());\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","styles","img","display","flexWrap","height","border","Index","url","setUrl","items","setItems","tags","setTags","group","setGroup","tag","setTag","loading","setLoading","handleClickLoading","fetch","then","response","json","data","embed_url","addTag","alert","includes","handleClickClear","handelClickGroup","renderCards","length","map","item","renderCardsGroup"],"mappings":"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","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState } from \"react\";\n\n\nconst styles = {\n  img: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    height: \"100%\",\n    border: \"1px solid black\"\n  }\n};\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [items, setItems] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [group, setGroup] = useState(false);\n  const [tag, setTag] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleClickLoading = tag => {\n    fetch(\n      \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag\n    )\n      .then(response => response.json())\n      .then(data => {\n        if (\"data\" in data) {\n          if (\"embed_url\" in data.data) {\n            setItems([...items, { tag: tag, url: data.data.embed_url }]);\n            addTag(tag);\n          } else {\n            alert(\"По тегу ничего не найдено\");\n          }\n        } else {\n          alert(\"Произошла http ошибка\");\n        }\n        setLoading(\"\");\n      });\n  };\n\n  const addTag = tag => {\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n  };\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n  const handelClickGroup = () => {\n    setGroup(!group);\n  };\n\n  const renderCards = () => {\n    if (items.length > 0) {\n      return (\n        <div style={styles.img}>\n          {items.map(item => (\n            <Card item={item} key={item.url} setTage={setTag} />\n          ))}\n        </div>\n      );\n    }\n  };\n\n  const renderCardsGroup = () => {\n    if (items.length > 0)\n      return tags.map(tag => (\n        <div key={tag}>\n          {tag}\n          <div style={styles.img}>\n            {items.map(item => {\n              if (tag === item.tag) {\n                return <Card item={item} key={item.url} setTage={setTag} />;\n              }\n            })}\n          </div>\n        </div>\n      ));\n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n        group={group}\n        tag={tag}\n        setTag={setTag}\n        loading={loading}\n        setLoading={setLoading}\n      />\n      {group ? renderCardsGroup() : renderCards()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}