{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  const {\n    0: url,\n    1: setUrl\n  } = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=сats\");\n  const {\n    0: resItems,\n    1: setResItems\n  } = useState();\n\n  const handleClickLoading = () => {\n    setUrl(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=сats\");\n    alert(\"Loading\");\n  };\n\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => setResItems(data));\n    alert(\"zagruzil\");\n  }, [url]);\n\n  const renderCards = () => {\n    if (resItems.lendth > 0) {\n      return resItems.map(item => __jsx(Card, {\n        item: item,\n        key: `${item.id}:${item.firstName}-${item.lastName}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), renderCards);\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","useState","useMemo","useEffect","Index","url","setUrl","resItems","setResItems","handleClickLoading","alert","handleClickClear","handelClickGroup","fetch","then","response","json","data","renderCards","lendth","map","item","id","firstName","lastName"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBL,QAAQ,CAAC,qEAAD,CAA9B;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,EAAxC;;AAEA,QAAMQ,kBAAkB,GAAG,MAAM;AAC/BH,IAAAA,MAAM,CACJ,qEADI,CAAN;AAGAI,IAAAA,KAAK,CAAC,SAAD,CAAL;AACD,GALD;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAGA,QAAME,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACR,GAAD,CAAL,CACGS,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIT,WAAW,CAACS,IAAD,CAF3B;AAGAP,IAAAA,KAAK,CAAC,UAAD,CAAL;AACD,GALQ,EAKN,CAACL,GAAD,CALM,CAAT;;AAQA,QAAMa,WAAW,GAAG,MAAM;AACxB,QAAIX,QAAQ,CAACY,MAAT,GAAkB,CAAtB,EAAyB;AACvB,aACEZ,QAAQ,CAACa,GAAT,CAAaC,IAAI,IACb,MAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,GAAG,EAAG,GAAEA,IAAI,CAACC,EAAG,IAAGD,IAAI,CAACE,SAAU,IAAGF,IAAI,CAACG,QAAS,EAFrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADF;AAQD;AACF,GAXD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEf,kBADlB;AAEE,IAAA,YAAY,EAAEE,gBAFhB;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMEM,WANF,CADF;AAWD","sourcesContent":["import Row from \"../components/row\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=сats\");\n  const [resItems, setResItems] = useState();\n\n  const handleClickLoading = () => {\n    setUrl(\n      \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=сats\"\n    );\n    alert(\"Loading\");\n  };\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => setResItems(data));\n    alert(\"zagruzil\");\n  }, [url]);\n\n\n  const renderCards = () => {\n    if (resItems.lendth > 0) {\n      return (\n        resItems.map(item => (\n            <Card\n              item={item}\n              key={`${item.id}:${item.firstName}-${item.lastName}`}\n            />\n          ))\n      );\n    }\n  };\n\n  \n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n     {renderCards}\n   \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}