{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  var _useState = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState({}),\n      resItem = _useState2[0],\n      setResItem = _useState2[1];\n\n  var _useState3 = useState({}),\n      items = _useState3[0],\n      setItems = _useState3[1];\n\n  var handleClickLoading = function handleClickLoading() {\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setResItem(data);\n    });\n  };\n\n  useMemo(function () {\n    if (\"data\" in resItem) setItems({\n      \"type\": \"cat\",\n      \"url\": resItem.data.embed_url\n    });\n  }, [resItem]);\n\n  var handleClickClear = function handleClickClear() {\n    alert(\"Clear\");\n  };\n\n  var handelClickGroup = function handelClickGroup() {\n    alert(\"Group\");\n  };\n\n  var renderCards = function renderCards() {\n    if (\"url\" in items) {\n      return __jsx(Card, {\n        item: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), renderCards(), console.log(items));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItem","setResItem","items","setItems","handleClickLoading","fetch","then","response","json","data","embed_url","handleClickClear","alert","handelClickGroup","renderCards","console","log"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,kBACRH,QAAQ,CAC5B,sEAD4B,CADA;AAAA,MACvBI,GADuB;AAAA,MAClBC,MADkB;;AAAA,mBAIAL,QAAQ,CAAC,EAAD,CAJR;AAAA,MAIvBM,OAJuB;AAAA,MAIdC,UAJc;;AAAA,mBAKNP,QAAQ,CAAC,EAAD,CALF;AAAA,MAKvBQ,KALuB;AAAA,MAKhBC,QALgB;;AAO9B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BC,IAAAA,KAAK,CAACP,GAAD,CAAL,CACCQ,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,aAAIR,UAAU,CAACQ,IAAD,CAAd;AAAA,KAFV;AAID,GALD;;AAOAd,EAAAA,OAAO,CAAC,YAAM;AACZ,QAAI,UAAUK,OAAd,EACAG,QAAQ,CAAE;AAAC,cAAO,KAAR;AAAc,aAAMH,OAAO,CAACS,IAAR,CAAaC;AAAjC,KAAF,CAAR;AACD,GAHM,EAGJ,CAACV,OAAD,CAHI,CAAP;;AAKA,MAAMW,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BC,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAGA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AASA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAG,SAAQZ,KAAX,EAAiB;AACb,aACF,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE;AAEH;AACF,GALD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEE,kBADlB;AAEE,IAAA,YAAY,EAAEO,gBAFhB;AAGE,IAAA,YAAY,EAAEE,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGC,WAAW,EANd,EAOGC,OAAO,CAACC,GAAR,CAAYd,KAAZ,CAPH,CADF;AAWD","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [resItem, setResItem] = useState({});\n  const [items, setItems]=useState({});\n\n  const handleClickLoading = () => {\n    fetch(url)\n    .then(response => response.json())\n    .then(data => setResItem(data));\n    \n  };\n\n  useMemo(() => {\n    if (\"data\" in resItem)\n    setItems ({\"type\":\"cat\",\"url\":resItem.data.embed_url})\n  }, [resItem]);\n\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n\n  \n  \n\n\n  const renderCards = () => {\n    if(\"url\"in items){\n        return (\n      <Card item={items}/>)\n    }\n  };\n\n\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n      {renderCards()}\n      {console.log(items)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}