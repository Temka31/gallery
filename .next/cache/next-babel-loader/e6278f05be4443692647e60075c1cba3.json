{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  var _useState = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=сats\"),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState(),\n      resItems = _useState2[0],\n      setResItems = _useState2[1];\n\n  var handleClickLoading = function handleClickLoading() {\n    alert(\"Loading\");\n  };\n\n  var handleClickClear = function handleClickClear() {\n    alert(\"Clear\");\n  };\n\n  var handelClickGroup = function handelClickGroup() {\n    alert(\"Group\");\n  };\n\n  useEffect(function () {\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setResItems(data);\n    });\n    alert(\"zagruzil\");\n  }, [url]);\n\n  var renderCards = function renderCards() {\n    if (resItems == 0) return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"121312\");\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), renderCards(), console.log(resItems));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItems","setResItems","handleClickLoading","alert","handleClickClear","handelClickGroup","fetch","then","response","json","data","renderCards","console","log"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,kBACRH,QAAQ,CAC5B,qEAD4B,CADA;AAAA,MACvBI,GADuB;AAAA,MAClBC,MADkB;;AAAA,mBAIEL,QAAQ,EAJV;AAAA,MAIvBM,QAJuB;AAAA,MAIbC,WAJa;;AAM9B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BC,IAAAA,KAAK,CAAC,SAAD,CAAL;AACD,GAFD;;AAGA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAGA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BF,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAIAP,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,KAAK,CAACR,GAAD,CAAL,CACGS,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,aAAIT,WAAW,CAACS,IAAD,CAAf;AAAA,KAFZ;AAGAP,IAAAA,KAAK,CAAC,UAAD,CAAL;AACD,GALQ,EAKN,CAACL,GAAD,CALM,CAAT;;AAOA,MAAMa,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAGX,QAAQ,IAAG,CAAd,EACE,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR;AAEH,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEE,kBADlB;AAEE,IAAA,YAAY,EAAEE,gBAFhB;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGM,WAAW,EANd,EAOGC,OAAO,CAACC,GAAR,CAAYb,QAAZ,CAPH,CADF;AAWD","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=сats\"\n  );\n  const [resItems, setResItems] = useState();\n\n  const handleClickLoading = () => {\n    alert(\"Loading\");\n  };\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => setResItems(data));\n    alert(\"zagruzil\");\n  }, [url]);\n\n  const renderCards = () => {\n    if(resItems ==0)\n      return (<div>121312</div>)\n     \n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n      {renderCards()}\n      {console.log(resItems)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}