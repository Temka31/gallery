{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/components/row.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nexport default function Row(_ref) {\n  var onClickLoading = _ref.onClickLoading,\n      onClickClear = _ref.onClickClear,\n      onClickGroup = _ref.onClickGroup,\n      group = _ref.group;\n\n  var _useState = useState(\"\"),\n      tag = _useState[0],\n      setTag = _useState[1];\n\n  var handleChangeTag = function handleChangeTag(event) {\n    setTag(event.target.value);\n  };\n\n  var handleClick = function handleClick() {\n    if (tag == undefined) {\n      alert(\"заполните поле 'тег'\");\n    } else {\n      onClickLoading(tag);\n    }\n  };\n\n  var handleClickClear = function handleClickClear() {\n    onClickClear();\n    setTag(\"\");\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"tag\",\n    value: tag,\n    onChange: handleChangeTag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"), __jsx(\"button\", {\n    onClick: handleClickClear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"), __jsx(\"button\", {\n    onClick: onClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, group ? \"Разгруппировать\" : \"Группировать\"));\n}","map":{"version":3,"sources":["/Users/tema/gallery/components/row.js"],"names":["useState","Row","onClickLoading","onClickClear","onClickGroup","group","tag","setTag","handleChangeTag","event","target","value","handleClick","undefined","alert","handleClickClear"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,GAAT,OAKZ;AAAA,MAJDC,cAIC,QAJDA,cAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,KACC,QADDA,KACC;;AAAA,kBACqBL,QAAQ,CAAC,EAAD,CAD7B;AAAA,MACMM,GADN;AAAA,MACWC,MADX;;AAGD,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/BF,IAAAA,MAAM,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIN,GAAG,IAAIO,SAAX,EAAsB;AACpBC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,KAFD,MAEO;AACLZ,MAAAA,cAAc,CAACI,GAAD,CAAd;AACD;AACF,GAND;;AAQA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BZ,IAAAA,YAAY;AACZI,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,KAAxB;AAA8B,IAAA,KAAK,EAAED,GAArC;AAA0C,IAAA,QAAQ,EAAEE,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFF,EAGE;AAAQ,IAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAHF,EAIE;AAAQ,IAAA,OAAO,EAAEX,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,GAAG,iBAAH,GAAuB,cAD/B,CAJF,CADF;AAUD","sourcesContent":["import { useState } from \"react\";\n\nexport default function Row({\n  onClickLoading,\n  onClickClear,\n  onClickGroup,\n  group\n}) {\n  const [tag, setTag] = useState(\"\");\n\n  const handleChangeTag = event => {\n    setTag(event.target.value);\n  };\n\n  const handleClick = () => {\n    if (tag == undefined) {\n      alert(\"заполните поле 'тег'\");\n    } else {\n      onClickLoading(tag);\n    }\n  };\n\n  const handleClickClear = () => {\n    onClickClear();\n    setTag(\"\");\n  };\n\n  return (\n    <div>\n      <input type=\"text\" name=\"tag\" value={tag} onChange={handleChangeTag} />\n      <button onClick={handleClick}>Загрузить</button>\n      <button onClick={handleClickClear}>Очистить</button>\n      <button onClick={onClickGroup}>\n        {group ? \"Разгруппировать\" : \"Группировать\"}\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}