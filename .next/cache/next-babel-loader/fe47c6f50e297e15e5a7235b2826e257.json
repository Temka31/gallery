{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  var _useState = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState({}),\n      resItem = _useState2[0],\n      setResItem = _useState2[1];\n\n  var _useState3 = useState(),\n      loadTag = _useState3[0],\n      setLoadTeg = _useState3[1];\n\n  var _useState4 = useState([]),\n      items = _useState4[0],\n      setItems = _useState4[1];\n\n  var _useState5 = useState([]),\n      tags = _useState5[0],\n      setTags = _useState5[1];\n\n  var _useState6 = useState(false),\n      group = _useState6[0],\n      setGroup = _useState6[1];\n\n  var handleClickLoading = function handleClickLoading(tag) {\n    fetch(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (\"data\" in data) {\n        if (\"embed_url\" in data.data) {\n          setItems([].concat(_toConsumableArray(items), [{\n            tag: tag,\n            url: data.data.embed_url\n          }]));\n          addTag(tag);\n        }\n      } else {\n        alert('По тегу ничего не найдено');\n      }\n    });\n  };\n\n  var addTag = function addTag(tag) {\n    if (!tags.includes(tag)) {\n      setTags([].concat(_toConsumableArray(tags), [tag]));\n    }\n  };\n\n  var handleClickClear = function handleClickClear() {\n    setItems([]);\n  };\n\n  var handelClickGroup = function handelClickGroup() {\n    setGroup(!group);\n  };\n\n  var renderCards = function renderCards() {\n    if (items.length > 0) {\n      return items.map(function (item) {\n        return __jsx(Card, {\n          item: item,\n          key: item.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      });\n    }\n  };\n\n  var renderCardsGroup = function renderCardsGroup() {\n    if (items.length > 0) return tags.map(function (tag) {\n      return __jsx(\"div\", {\n        key: tag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, tag, items.map(function (item) {\n        if (tag === item.tag) {\n          return __jsx(Card, {\n            item: item,\n            key: item.url,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n        }\n      }));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    grour: group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), group ? renderCardsGroup() : renderCards(), console.log(items), console.log(tags));\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","Card","useState","useMemo","useEffect","Index","url","setUrl","resItem","setResItem","loadTag","setLoadTeg","items","setItems","tags","setTags","group","setGroup","handleClickLoading","tag","fetch","then","response","json","data","embed_url","addTag","alert","includes","handleClickClear","handelClickGroup","renderCards","length","map","item","renderCardsGroup","console","log"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,kBACRH,QAAQ,CAC5B,sEAD4B,CADA;AAAA,MACvBI,GADuB;AAAA,MAClBC,MADkB;;AAAA,mBAIAL,QAAQ,CAAC,EAAD,CAJR;AAAA,MAIvBM,OAJuB;AAAA,MAIdC,UAJc;;AAAA,mBAKAP,QAAQ,EALR;AAAA,MAKvBQ,OALuB;AAAA,MAKdC,UALc;;AAAA,mBAMJT,QAAQ,CAAC,EAAD,CANJ;AAAA,MAMvBU,KANuB;AAAA,MAMhBC,QANgB;;AAAA,mBAONX,QAAQ,CAAC,EAAD,CAPF;AAAA,MAOvBY,IAPuB;AAAA,MAOjBC,OAPiB;;AAAA,mBAQJb,QAAQ,CAAC,KAAD,CARJ;AAAA,MAQvBc,KARuB;AAAA,MAQhBC,QARgB;;AAU9B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,GAAG,EAAI;AAChCC,IAAAA,KAAK,CACH,oEAAoED,GADjE,CAAL,CAGGE,IAHH,CAGQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAHhB,EAIGF,IAJH,CAIQ,UAAAG,IAAI,EAAI;AACZ,UAAI,UAAUA,IAAd,EAAoB;AAChB,YAAI,eAAeA,IAAI,CAACA,IAAxB,EAA6B;AAC/BX,UAAAA,QAAQ,8BAAKD,KAAL,IAAY;AAAEO,YAAAA,GAAG,EAAEA,GAAP;AAAYb,YAAAA,GAAG,EAAEkB,IAAI,CAACA,IAAL,CAAUC;AAA3B,WAAZ,GAAR;AACAC,UAAAA,MAAM,CAACP,GAAD,CAAN;AAAa;AACd,OAJD,MAIO;AACHQ,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;AACF,KAZH;AAaD,GAdD;;AAgBA,MAAMD,MAAM,GAAG,SAATA,MAAS,CAAAP,GAAG,EAAI;AACpB,QAAI,CAACL,IAAI,CAACc,QAAL,CAAcT,GAAd,CAAL,EAAyB;AACvBJ,MAAAA,OAAO,8BAAKD,IAAL,IAAWK,GAAX,GAAP;AACD;AACF,GAJD;;AAMA,MAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BhB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAGA,MAAMiB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7Bb,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,MAAMe,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAInB,KAAK,CAACoB,MAAN,GAAe,CAAnB,EAAsB;AACpB,aAAOpB,KAAK,CAACqB,GAAN,CAAU,UAAAC,IAAI;AAAA,eAAI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,GAAG,EAAEA,IAAI,CAAC5B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAd,CAAP;AACD;AACF,GAJD;;AAMA,MAAM6B,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAIvB,KAAK,CAACoB,MAAN,GAAe,CAAnB,EACI,OAAQlB,IAAI,CAACmB,GAAL,CAAS,UAAAd,GAAG;AAAA,aAClB;AAAK,QAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,GADH,EAEGP,KAAK,CAACqB,GAAN,CAAU,UAAAC,IAAI,EAAI;AACjB,YAAIf,GAAG,KAAKe,IAAI,CAACf,GAAjB,EAAsB;AAClB,iBACF,MAAC,IAAD;AAAM,YAAA,IAAI,EAAEe,IAAZ;AAAkB,YAAA,GAAG,EAAEA,IAAI,CAAC5B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE;AAEH;AACF,OALA,CAFH,CADkB;AAAA,KAAZ,CAAR;AAYL,GAdD;;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEY,kBADlB;AAEE,IAAA,YAAY,EAAEW,gBAFhB;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAIE,IAAA,KAAK,EAAEd,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGA,KAAK,GAAEmB,gBAAgB,EAAlB,GAAqBJ,WAAW,EAPxC,EAQGK,OAAO,CAACC,GAAR,CAAYzB,KAAZ,CARH,EASGwB,OAAO,CAACC,GAAR,CAAYvB,IAAZ,CATH,CADF;AAaD","sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [resItem, setResItem] = useState({});\n  const [loadTag, setLoadTeg] = useState();\n  const [items, setItems] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [group, setGroup] = useState(false);\n\n  const handleClickLoading = tag => {\n    fetch(\n      \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag\n    )\n      .then(response => response.json())\n      .then(data => {\n        if (\"data\" in data) {\n            if (\"embed_url\" in data.data){\n          setItems([...items, { tag: tag, url: data.data.embed_url }]);\n          addTag(tag);}\n        } else {\n            alert('По тегу ничего не найдено')\n        }\n      });\n  };\n\n  const addTag = tag => {\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n  };\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n  const handelClickGroup = () => {\n    setGroup(!group);\n  };\n\n  const renderCards = () => {\n    if (items.length > 0) {\n      return items.map(item => <Card item={item} key={item.url} />);\n    }\n  };\n\n  const renderCardsGroup = () => {\n    if (items.length > 0) \n        return (tags.map(tag => \n          <div key={tag}> \n            {tag}\n            {items.map(item => {\n              if (tag === item.tag) {\n                  return(\n                <Card item={item} key={item.url} />);\n              }\n            })}\n          </div>\n      ));\n    \n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n        grour={group}\n      />\n      {group? renderCardsGroup():renderCards()}\n      {console.log(items)}\n      {console.log(tags)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}