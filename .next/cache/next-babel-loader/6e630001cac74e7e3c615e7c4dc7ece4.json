{"ast":null,"code":"var _jsxFileName = \"/Users/tema/gallery/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"../components/row\";\nimport { useState, useMemo, useEffect } from \"react\";\nexport default function Index() {\n  //   const [url, setUrl] = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=сats\");\n  var _useState = useState(),\n      resItems = _useState[0],\n      setResItems = _useState[1];\n\n  var handleClickLoading = function handleClickLoading() {\n    alert(\"Loading\");\n  };\n\n  var handleClickClear = function handleClickClear() {\n    alert(\"Clear\");\n  };\n\n  var handelClickGroup = function handelClickGroup() {\n    alert(\"Group\");\n  };\n\n  useEffect(function () {\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setResItems(data);\n    });\n    alert(\"zagruzil\");\n  }, [url]);\n\n  var renderCards = function renderCards() {\n    if (resItems.lendth > 0) {\n      return resItems.map(function (item) {\n        return __jsx(Card, {\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Row, {\n    onClickLoading: handleClickLoading,\n    onClickClear: handleClickClear,\n    onClickGroup: handelClickGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), renderCards);\n}","map":{"version":3,"sources":["/Users/tema/gallery/pages/index.js"],"names":["Row","useState","useMemo","useEffect","Index","resItems","setResItems","handleClickLoading","alert","handleClickClear","handelClickGroup","fetch","url","then","response","json","data","renderCards","lendth","map","item"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,eAAe,SAASC,KAAT,GAAiB;AAChC;AADgC,kBAEEH,QAAQ,EAFV;AAAA,MAEvBI,QAFuB;AAAA,MAEbC,WAFa;;AAI9B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAE/BC,IAAAA,KAAK,CAAC,SAAD,CAAL;AACD,GAHD;;AAIA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAGA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BF,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,KAAK,CAACC,GAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,aAAIV,WAAW,CAACU,IAAD,CAAf;AAAA,KAFZ;AAGAR,IAAAA,KAAK,CAAC,UAAD,CAAL;AACD,GALQ,EAKN,CAACI,GAAD,CALM,CAAT;;AAQA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIZ,QAAQ,CAACa,MAAT,GAAkB,CAAtB,EAAyB;AACvB,aACEb,QAAQ,CAACc,GAAT,CAAa,UAAAC,IAAI;AAAA,eACb,MAAC,IAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,OAAjB,CADF;AAOD;AACF,GAVD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,cAAc,EAAEb,kBADlB;AAEE,IAAA,YAAY,EAAEE,gBAFhB;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMEO,WANF,CADF;AAWD","sourcesContent":["import Row from \"../components/row\";\nimport { useState, useMemo, useEffect } from \"react\";\n\nexport default function Index() {\n//   const [url, setUrl] = useState(\"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=сats\");\n  const [resItems, setResItems] = useState();\n\n  const handleClickLoading = () => {\n    \n    alert(\"Loading\");\n  };\n  const handleClickClear = () => {\n    alert(\"Clear\");\n  };\n  const handelClickGroup = () => {\n    alert(\"Group\");\n  };\n\n  useEffect(() => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => setResItems(data));\n    alert(\"zagruzil\");\n  }, [url]);\n\n\n  const renderCards = () => {\n    if (resItems.lendth > 0) {\n      return (\n        resItems.map(item => (\n            <Card\n              item={item}\n            />\n          ))\n      );\n    }\n  };\n\n  \n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n      />\n     {renderCards}\n   \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}