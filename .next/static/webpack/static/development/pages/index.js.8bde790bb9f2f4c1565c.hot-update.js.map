{"version":3,"file":"static/webpack/static/development/pages/index.js.8bde790bb9f2f4c1565c.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Row from \"../components/row\";\nimport Card from \"../components/card\";\nimport { useState } from \"react\";\n\n\nconst styles = {\n  img: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    height: \"100%\",\n    border: \"1px solid black\"\n  }\n};\n\nexport default function Index() {\n  const [url, setUrl] = useState(\n    \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=mouse\"\n  );\n  const [items, setItems] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [group, setGroup] = useState(false);\n  const [tag, setTag] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const handleClickLoading = tag => {\n    fetch(\n      \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=\" + tag\n    )\n      .then(response => response.json())\n      .then(data => {\n        if (\"data\" in data) {\n          if (\"embed_url\" in data.data) {\n            setItems([...items, { tag: tag, url: data.data.embed_url }]);\n            addTag(tag);\n          } else {\n            alert(\"По тегу ничего не найдено\");\n          }\n        } else {\n          alert(\"Произошла http ошибка\");\n        }\n        setLoading(\"\");\n      });\n  };\n\n  const addTag = tag => {\n    if (!tags.includes(tag)) {\n      setTags([...tags, tag]);\n    }\n  };\n\n  const handleClickClear = () => {\n    setItems([]);\n  };\n  const handelClickGroup = () => {\n    setGroup(!group);\n  };\n\n  const renderCards = () => {\n    if (items.length > 0) {\n      return (\n        <div style={styles.img}>\n          {items.map(item => (\n            <Card item={item} key={item.url} setTage={setTag} />\n          ))}\n        </div>\n      );\n    }\n  };\n\n  const renderCardsGroup = () => {\n    if (items.length > 0)\n      return tags.map(tag => (\n        <div key={tag}>\n          {tag}\n          <div style={styles.img}>\n            {items.map(item => {\n              if (tag === item.tag) {\n                return <Card item={item} key={item.url} setTage={setTag} />;\n              }\n            })}\n          </div>\n        </div>\n      ));\n  };\n\n  return (\n    <div>\n      <Row\n        onClickLoading={handleClickLoading}\n        onClickClear={handleClickClear}\n        onClickGroup={handelClickGroup}\n        group={group}\n        tag={tag}\n        setTag={setTag}\n        loading={loading}\n        setLoading={setLoading}\n      />\n      {group ? renderCardsGroup() : renderCards()}\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AARA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;A","sourceRoot":""}